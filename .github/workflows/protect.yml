name: Protection Anti-Sabotage
on:
  push:
    branches: [main]
  pull_request:
  issues:
    types: [opened, edited]
jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check critical files
      run: |
        CRITICAL_FILES=("index.html" "invite.js" ".github/workflows/auto-invite.yml")
        MISSING=""
        
        for file in "${CRITICAL_FILES[@]}"; do
          if [ ! -f "$file" ]; then
            MISSING="$MISSING $file"
          fi
        done
        
        if [ -n "$MISSING" ]; then
          echo "‚ùå ALERTE: Fichiers critiques supprim√©s:$MISSING"
          exit 1
        fi
        echo "‚úÖ Tous les fichiers critiques pr√©sents"
    
    - name: Detect suspicious changes
      run: |
        if git diff --name-only HEAD~1 2>/dev/null | grep -E "\.(yml|js|html)$"; then
          echo "‚ö†Ô∏è Modifications d√©tect√©es sur fichiers sensibles"
          git diff --stat HEAD~1 || true
        fi
    
    - name: Check malicious patterns
      run: |
        # V√©rifier patterns malveillants en excluant les workflows
        if grep -r "curl.*evil\|wget.*malware\|base64.*decode" . --exclude-dir=.git --exclude-dir=.github 2>/dev/null; then
          echo "‚ùå ALERTE: Pattern malveillant d√©tect√© dans le code"
          exit 1
        fi
        
        # V√©rifier rm -rf en excluant les workflows
        if grep -r "rm -rf" . --exclude-dir=.git --exclude-dir=.github 2>/dev/null; then
          echo "‚ùå ALERTE: Pattern rm -rf d√©tect√© dans le code"
          exit 1
        fi
        echo "‚úÖ Aucun pattern malveillant d√©tect√©"
    
    - name: Validate workflow integrity
      run: |
        if [ -f ".github/workflows/auto-invite.yml" ]; then
          if ! grep -q "invitations" .github/workflows/auto-invite.yml; then
            echo "‚ùå ALERTE: Workflow d'invitation corrompu"
            exit 1
          fi
        fi
        echo "‚úÖ Workflows int√®gres"
  
  spam-protection:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
    - name: Check spam patterns
      uses: actions/github-script@v6
      with:
        script: |
          const body = context.payload.issue.body || '';
          const title = context.payload.issue.title || '';
          
          const spamPatterns = [
            /(.)\1{20,}/,  // R√©p√©tition excessive
            /https?:\/\/[^\s]*(?:bit\.ly|tinyurl|t\.co)/,  // URLs suspectes
            /[A-Z]{50,}/,  // CAPS LOCK excessif
            /@[a-zA-Z0-9_-]{1,2}$/  // Pseudo trop court
          ];
          
          for (const pattern of spamPatterns) {
            if (pattern.test(body) || pattern.test(title)) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: 'üö´ **SPAM D√âTECT√â** - Issue ferm√©e automatiquement'
              });
              
              await github.rest.issues.update({
                ...context.repo,
                issue_number: context.issue.number,
                state: 'closed'
              });
              
              await github.rest.issues.addLabels({
                ...context.repo,
                issue_number: context.issue.number,
                labels: ['spam']
              });
              
              return;
            }
          }
          
          console.log('‚úÖ Issue valid√©e - Pas de spam d√©tect√©');