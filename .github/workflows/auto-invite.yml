name: Process Candidature
on:
  push:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
jobs:
  review:
    if: github.event_name == 'issues' && contains(github.event.issue.title, '[INVITE]')
    runs-on: ubuntu-latest
    steps:
    - name: Extract username
      id: user
      run: |
        USERNAME=$(echo '${{ github.event.issue.body }}' | grep -o '@[a-zA-Z0-9_-]*' | head -1 | sed 's/@//')
        echo "name=${USERNAME}" >> $GITHUB_OUTPUT
    
    - name: Add review label
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.addLabels({
            ...context.repo,
            issue_number: context.issue.number,
            labels: ['√†-examiner']
          });
          await github.rest.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body: 'üìù **Candidature re√ßue !**\n\nCette candidature va √™tre examin√©e par l\'√©quipe.\n\n**Pour valider:** Ajoutez le label `approuv√©`\n**Pour refuser:** Ajoutez le label `refus√©`'
          });
  
  invite:
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'approuv√©')
    runs-on: ubuntu-latest
    steps:
    - name: Extract username
      id: user
      run: |
        USERNAME=$(echo '${{ github.event.issue.body }}' | grep -o '@[a-zA-Z0-9_-]*' | head -1 | sed 's/@//')
        echo "name=${USERNAME}" >> $GITHUB_OUTPUT
    
    - name: Invite to org
      run: |
        USER_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/users/${{ steps.user.outputs.name }}" | jq .id)
        curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/orgs/${{ github.repository_owner }}/invitations" -d "{\"invitee_id\": $USER_ID}"
    
    - name: Confirm invitation
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body: '‚úÖ **APPROUV√â !** Invitation envoy√©e √† @${{ steps.user.outputs.name }}'
          });
          await github.rest.issues.update({
            ...context.repo,
            issue_number: context.issue.number,
            state: 'closed'
          });
  
  reject:
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'refus√©')
    runs-on: ubuntu-latest
    steps:
    - name: Reject candidature
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body: '‚ùå **REFUS√â** - Candidature non retenue apr√®s examen.'
          });
          await github.rest.issues.update({
            ...context.repo,
            issue_number: context.issue.number,
            state: 'closed'
          });